# Claude Code Service Environment Variables

# Application Configuration
VITE_APP_ID=your-app-id
JWT_SECRET=your-jwt-secret-here
NODE_ENV=development

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/claude_code_service

# OAuth Configuration
OAUTH_SERVER_URL=https://oauth.example.com
OWNER_OPEN_ID=your-owner-openid

# Anthropic/Claude Configuration
BUILT_IN_FORGE_API_URL=https://api.anthropic.com
BUILT_IN_FORGE_API_KEY=your-anthropic-api-key

# Slack Integration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_DEFAULT_CHANNEL=#general

# ====================
# MCP Server Credentials
# ====================

# GitHub MCP Server
# Get token from: https://github.com/settings/tokens
# Required scopes: repo, read:org, read:user
GITHUB_TOKEN=ghp_your_github_personal_access_token

# Linear MCP Server
# Get API key from: https://linear.app/settings/api
LINEAR_API_KEY=lin_api_your_linear_api_key

# Brave Search MCP Server (Web Search)
# Sign up at: https://brave.com/search/api/
BRAVE_API_KEY=BSA_your_brave_search_api_key

# Google Drive MCP Server
# Create service account credentials from Google Cloud Console
# Format: JSON string of service account credentials
GOOGLE_DRIVE_CREDENTIALS='{"type":"service_account","project_id":"...","private_key_id":"...","private_key":"...","client_email":"...","client_id":"...","auth_uri":"...","token_uri":"...","auth_provider_x509_cert_url":"...","client_x509_cert_url":"..."}'

# PostgreSQL MCP Server
# Connection string for PostgreSQL database access via MCP
POSTGRES_CONNECTION_STRING=postgresql://username:password@hostname:5432/database_name

# ====================
# Optional MCP Configuration
# ====================

# Filesystem MCP Server - Allowed paths (colon-separated)
# ALLOWED_PATHS=/workspace:/tmp:/data

# Slack Team ID (optional, for workspace-specific operations)
# SLACK_TEAM_ID=T1234567890

# GitHub API URL (optional, for GitHub Enterprise)
# GITHUB_API_URL=https://github.company.com/api/v3

# ====================
# Additional Configuration
# ====================

# Port for the service
PORT=3000

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Docker configuration
DOCKER_HOST=unix:///var/run/docker.sock

# Workflow execution limits
MAX_CONCURRENT_WORKFLOWS=10
DEFAULT_WORKFLOW_TIMEOUT=3600

# Budget limits (in cents)
DEFAULT_DAILY_BUDGET=10000
DEFAULT_MONTHLY_BUDGET=100000
